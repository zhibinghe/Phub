x = 1:59
fx = function(r) r/x + 1/(60-x)
L = c(outer(1:9,10^c(1)))
pos = rep(NA,length(L))
for(i in 1:length(L)){
  cat("running ith:",i,"\n")
  r = seq(1,4,length.out=L[i])
  out = matrix(NA,length(x),length(r))
  for(j in 1:length(r)) out[,j] = fx(j)
  baseline = apply(out,2,min)
  out1 = round(t(baseline/t(out)),3)
  res = data.frame(n1=x,out1,apply(out1,1,min))
  pos[i]=which.max(res[,length(r)+2])
}
plot(x=L,y=pos,pch=20,type="l",xlab="number",ylab="position",bty="l")




x=1:59
gx = 5/(2*x) + 1/(60-x)
baseline = min(gx)
eff = baseline/gx
which(eff==max(eff))

$$
  f(x) = \frac{r}{x} + \frac{1}{60-x},
$$
  where $1 \leq r \leq 4$. And the derivative is 
\begin{align*}
f^{'}(x) &= r*\frac{-1}{x^2} + \frac{1}{(60-x)^2}\\
  &= -\frac{(r-1)x^2-120rx+60^2r}{x^2(60-x)^2}
  \end{align*}
  We let $f^{'}(x)=0$, and since $1\leq x < 60$, then we have one solution
$$
  x = 60*\frac{\sqrt{r}}{\sqrt{r}+1}
$$
  The following figures show the $f^{'}(x)$ and $f(x)$
    
    ```{r out.width = "35%",echo=FALSE}
    knitr::include_graphics("plot.jpeg")
    ```
    
    Since the $n_A$ can only be an integer, thus we take $\lfloor60\frac{\sqrt{r}}{\sqrt{r}+1}\rfloor$ or $\lceil60\frac{\sqrt{r}}{\sqrt{r}+1}\rceil$. 
    
