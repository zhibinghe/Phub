A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
phub(G0,A,rho,0.01,pen.type="plog")$rho
M = 15
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
phub(G0,A,rho,0.01,pen.type="plog")$rho
phub(G0,A,rho,0.03,pen.type="plog")$rho
phub(G0,A,rho,0.02,pen.type="plog")$rho
phub = function(G,A,rho,lam,pen.type=c("plog","plasso","log"),iter.max=1000,tol=1e-4){
## f(G(t)|Z(t)=k,A)
pen.type = match.arg(pen.type)
cond.f = function(G,A){
T = dim(G)[1]; q = dim(A)[1]
Pr_cond = matrix(NA,T,q)
for(t in 1:T) Pr_cond[t,] = apply(t(t(A)^G[t,])*t(t(1-A)^(1-G[t,])),1,prod)
return(Pr_cond)
}
## posterior probability H and loglikelihood
posterior = function(rho,Pr_cond){
Htm = t(t(Pr_cond)*rho)
H = Htm/rowSums(Htm)
loglike = sum(log(rowSums(Htm)))
return(list(H=H,l=loglike))
}
## update rho: some rho will shrink to 0
if(pen.type=="log"){
hatrho = function(rho,H){
Mi = sum(rho!=0)
if(Mi*lam==1) stop("\nPlease input a new lam avoiding 1-M*lam is 0\n",call.=FALSE)
pars = sapply((colMeans(H) - lam)/(1-Mi*lam),function(x) max(0,x))
pars[pars<tol] = 0
return(pars)
}
}
else{
hatrho = function(rho,H){
T = dim(G)[1]
Hx = colSums(H)
ind = which(rho!=0); len = length(ind)
eqft = function(t) sum(t)
if(pen.type=="plasso"){
# convex function
ft = function(t) -sum(Hx[ind]*log(t)) + T*lam*(1-t[1])
pars = Rsolnp::solnp(pars=rho[ind],fun=ft,eqfun=eqft,eqB=1,LB=rep(0,len),
UB=rep(1,len),control=list(trace=0))$pars
}
else{
epsi = 1e-6
ans = list()
ft = function(t) -sum(Hx[ind]*log(t)) + T*lam*sum(log(epsi+t[-1]))
fun = function(i){
par = runif(len); par = par/sum(par) # normalized
sol = Rsolnp::solnp(pars=par,fun=ft,eqfun=eqft,eqB=1,LB=rep(0,len),
UB=rep(1,len),control=list(trace=0))
ans$pars = sol$pars
ans$values = tail(sol$values,1)
return(ans)
}
fval = lapply(as.list(1:5),fun) # repeatation
best = sapply(fval,function(x) x$values)
pars = fval[[which.min(best)]]$pars
}
pars[pars<tol] = 0
rho[ind] = pars
return(rho)
}
}
## update A: Am. will be 0 if rho_m=0
hatA = function(G,H){
q = dim(H)[2]; n = dim(G)[2]
HatA = matrix(NA,q,n)
for(m in 1:q){
if (all(H[,m]==0)) HatA[m,] = 0
else HatA[m,] = colSums(H[,m]*G)/sum(H[,m])
}
diag(HatA[-1,]) = 1 # Amm must be 1
return(HatA)
}
## EM Iteration
count = 0;diff = 1
L = vector();L[1] = 1
while(count < iter.max & diff > 0.01){
count = count + 1
# E Step
post = posterior(rho,cond.f(G,A))
H = post$H
L[count+1] = post$l
if(is.infinite(L[count+1])) break
# M Step
rho = hatrho(rho,H)
A = hatA(G,H)
diff = abs(L[count+1]-L[count])
}
return(list(A=A,rho=rho,l=L[count+1],iteration=count))
}
phub(G0,A,rho,0.02,pen.type="plog")$rho
phub(G0,A,rho,0.025,pen.type="plog")$rho
phub(G0,A,rho,0.022,pen.type="plog")$rho
M = 10
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
phub(G0,A,rho,0.0,pen.type="plog")$rho
n0 = 10; n=100
A0 = GenA(100,n0,0.4,0.1,rep(0.05,n))
G0 = GenG(A0,1000,c(0.1,rep(0.9/n0,n0)))
M = 15
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
phub(G0,A,rho,0.015,pen.type="plog")$rho
mphub(G0,M,0.02)$rho
mphub(G0,M,0.025)$rho
mphub(G0,M,0.022)$rho
mphub(G0,M,0.023)$rho
n0 = 10; n=100
A0 = GenA(100,n0,0.4,0.1,rep(0.05,n))
G0 = GenG(A0,1000,c(0.1,rep(0.9/n0,n0)))
mphub(G0,M,0.023)$rho
mphub(G0,M,0.022)$rho
mphub(G0,M,0.024)$rho
GenA
n0 = 5; n=100; T=1000
A0 = GenA(100,n0,0.4,0.1,rep(0.05,n))
G0 = GenG(A0,T,c(0.2,rep(0.8/n0,n0)))
M = 10
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
phub(G0,A,rho,0.04,pen.type="log")$rho
phub(G0,A,rho,0.04,pen.type="plog")$rho
library(foreach)
?foreach
GenG
M = 10; mphub(G0,M,0.045)$rho
n0 = 20; n=100; T=1000
A0 = GenA(100,n0,0.4,0.1,rep(0.05,n))
G0 = GenG(A0,T,c(0.2,rep(0.8/n0,n0)))
M = 20; mphub(G0,M,0.0)$rho
c(0.2,rep(0.8/n0,n0))
n0 = 20; n=100; T=1000
A0 = GenA(100,n0,0.4,0.1,rep(0.05,n))
G0 = GenG(A0,T,c(0.2,rep(0.8/n0,n0)))
M = 25
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
phub(G0,A,rho,0.02,pen.type="log")$rho
phub(G0,A,rho,0.01,pen.type="log")$rho
phub(G0,A,rho,0.005,pen.type="log")$rho
phub(G0,A,rho,0.008,pen.type="log")$rho
M = 30
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
phub(G0,A,rho,0.008,pen.type="log")$rho
phub(G0,A,rho,0.006,pen.type="log")$rho
c(0.2,rep(0.8/n0,n0))
phub(G0,A,rho,0.005,pen.type="log")$rho
phub(G0,A,rho,0.004,pen.type="log")$rho
phub(G0,A,rho,0.0055,pen.type="log")$rho
n0 = 20; n=100; T=2000
A0 = GenA(100,n0,0.4,0.1,rep(0.05,n))
G0 = GenG(A0,T,c(0.2,rep(0.8/n0,n0)))
M = 30
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
phub(G0,A,rho,0.0055,pen.type="log")$rho
phub(G0,A,rho,0.0045,pen.type="log")$rho
log(1000)
phub(G0,A,rho,0.0045,pen.type="log")$l
n0 = 5; n=100; T=2000
A0 = GenA(100,n0,0.4,0.1,rep(0.05,n))
G0 = GenG(A0,T,c(0.2,rep(0.8/n0,n0)))
M = 10
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
phub(G0,A,rho,0.04,pen.type="log")$l
0.5*log(T)*5***100
0.5*log(T)*5*5*100
log(2000)
n0 = 10; n=100; T=1000
A0 = GenA(100,n0,0.4,0.1,rep(0.05,n))
G0 = GenG(A0,T,c(0.2,rep(0.8/n0,n0)))
M = 15
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
phub(G0,A,rho,0.02,pen.type="log")$l
phub(G0,A,rho,0.02,pen.type="log")$rho
phub(G0,A,rho,0.015,pen.type="log")$rho
phub(G0,A,rho,0.030,pen.type="log")$rho
getwd()
dir()
load("scenario1.RData")
out[[1]]
xx=list(A=c(1,1),B=c(2,2))
xx
unlist(xx)
?unlist
rbind(xx)
do.call(rbind,xx)
?do.call
temp = lapply(out,function(x) x[which.max(x$bic),3:])
temp = lapply(out,function(x) x[1,])
temp = lapply(out,function(x) x[which.max(x$lambda),])
mm=out[[1]]
mm
mm[,3:]
temp = lapply(out,function(x) x[which.max(x[,2]),-c(1,2)])
temp
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
fpr = fp/(M-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
colMeans(xx)
out[[1]]
temp = lapply(out,function(x) x[x[,2]==0.023,-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
fpr = fp/(M-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
temp
temp = lapply(out,function(x) x[x[,1]==0.023,-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
fpr = fp/(M-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
colMeans(xx)
out
temp = lapply(out,function(x) x[1,-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
fpr = fp/(M-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
colMeans(xx)
source('~/.active-rstudio-document')
xx
colMeans(xx)
source('~/.active-rstudio-document')
xx
colMeans(xx)
source('~/.active-rstudio-document')
colMeans(xx)
lam
source('~/.active-rstudio-document')
colMeans(xx)
source('~/.active-rstudio-document')
colMeans(xx)
source('~/.active-rstudio-document')
colMeans(xx)
source('~/.active-rstudio-document')
colMeans(xx)
source('~/.active-rstudio-document')
colMeans(xx)
source('~/.active-rstudio-document')
colMeans(xx)
out[[1]]
source('~/.active-rstudio-document')
xx
temp[[1]]
temp = lapply(out,function(x) x[which.max(x[,3]),-c(1,2)])
temp[[1]]
temp = lapply(out,function(x) x[3,-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
fpr = fp/(M-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
temp = lapply(out,function(x) x[3,-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
fpr = fp/(n-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
colMeans(xx)
temp = lapply(out,function(x) x[1,-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
fpr = fp/(n-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
colMeans(xx)
dir()
## Bic
load("scenario3.RData")
temp = lapply(out,function(x) x[which.max(x[,2]),-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
fpr = fp/(n-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
out[[1]]
load("scenario5.RData")
#
temp = lapply(out,function(x) x[which.max(x[,2]),-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
fpr = fp/(n-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
colMeans(xx)
M
temp = lapply(out,function(x) x[3,-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
fpr = fp/(n-n0)
#fpr = fp/(M-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
colMeans(xx)
temp = lapply(out,function(x) x[which.max(x[,2]),-c(1,2)])
#temp = lapply(out,function(x) x[3,-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
#fpr = fp/(n-n0)
fpr = fp/(M-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
colMeans(xx)
source('~/Documents/R/Phub/tpr.R')
xx
colMeans(xx)
0.7*0.09+0.8*0.02+0.9*0.04+0.86
M
library(Phub)
phub
out[[]]
out[[1]]
out[[1]]
rm(list=ls())
## Bic
load("scenario7.RData")
temp = lapply(out,function(x) x[which.max(x[,2]),-c(1,2)])
#temp = lapply(out,function(x) x[3,-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
#fpr = fp/(n-n0)
fpr = fp/(M-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
out[[1]]
n0 = 5; n=100
A0 = GenA(100,n0,0.4,0.1,rep(0.05,n))
G0 = GenG(A0,1000,c(0.2,rep(0.8/n0,n0)))
M = 10
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
phub(G0,A,rho,0.04,pen.type="log")$rho
phub(G0,A,rho,0.04,pen.type="plog")$rho
phub(G0,A,rho,0.08,pen.type="plasso")$rho
[Package Phub version 0.1.0
phub(G0,A,rho,0.035,pen.type="log")$rho
phub(G0,A,rho,0.035,pen.type="log")$rho
phub(G0,A,rho,0.038,pen.type="log")$rho
n0 = 5; n=100
A0 = GenA(100,n0,0.4,0.02,rep(0.05,n))
G0 = GenG(A0,1000,c(0.2,rep(0.8/n0,n0)))
M = 10
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
phub(G0,A,rho,0.04,pen.type="log")$rho
G0 = GenG(A0,1000,c(0.2,rep(0.8/n0,n0)))
M = 10
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
phub(G0,A,rho,0.035,pen.type="log")$rho
temp
temp[[1]]
load("scenario7.RData")
#
temp = lapply(out,function(x) x[which.max(x[,2]),-c(1,2)])
#temp = lapply(out,function(x) x[3,-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
#fpr = fp/(n-n0)
fpr = fp/(M-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
colMeans(xx)
load("scenario3.RData")
#
temp = lapply(out,function(x) x[which.max(x[,2]),-c(1,2)])
#temp = lapply(out,function(x) x[3,-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
#fpr = fp/(n-n0)
fpr = fp/(M-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
colMeans(xx)
load("scenario1.RData")
#
temp = lapply(out,function(x) x[which.max(x[,2]),-c(1,2)])
#temp = lapply(out,function(x) x[3,-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
#fpr = fp/(n-n0)
fpr = fp/(M-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
colMeans(xx)
out[[1]]
n0 = 10; n=100; T=1000
A0 = GenA(100,n0,0.4,0.1,rep(0.05,n))
G0 = GenG(A0,T,c(0.2,rep(0.8/n0,n0)))
M = 100
mphub(G0,M,0.023)$rho
mphub(G0,M,0.022,rep=5)$rho
mphub(G0,M,0.010,rep=5)$rho
mphub(G0,M,0.012,rep=5)$rho
n0 = 5; n=100
A0 = GenA(100,n0,0.4,0.1,rep(0.05,n))
G0 = GenG(A0,1000,c(0.2,rep(0.8/n0,n0)))
M = 10
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
phub(G0,A,rho,0.04,pen.type="log")$rho
phub(G0,A,rho,0.04,pen.type="plog")$rho
M=80
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
phub(G0,A,rho,0,pen.type="plog")$rho
n0 = 10; n=100; T=2000
A0 = GenA(100,n0,0.4,0.02,rep(0.05,n))
G0 = GenG(A0,T,c(0.2,rep(0.8/n0,n0)))
M = 20
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
#phub(G0,A,rho,0.04,pen.type="log")$rho
phub(G0,A,rho,0,pen.type="plog")$rho
n0 = 10; n=100; T=2000
A0 = GenA(100,n0,0.4,0.02,rep(0.05,n))
G0 = GenG(A0,T,c(0.2,rep(0.8/n0,n0)))
M = 50
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
#phub(G0,A,rho,0.04,pen.type="log")$rho
phub(G0,A,rho,0,pen.type="plog")$rho
phub
