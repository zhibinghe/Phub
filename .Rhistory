temp[[1]]
temp = lapply(out,function(x) x[which.max(x[,3]),-c(1,2)])
temp[[1]]
temp = lapply(out,function(x) x[3,-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
fpr = fp/(M-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
temp = lapply(out,function(x) x[3,-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
fpr = fp/(n-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
colMeans(xx)
temp = lapply(out,function(x) x[1,-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
fpr = fp/(n-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
colMeans(xx)
dir()
## Bic
load("scenario3.RData")
temp = lapply(out,function(x) x[which.max(x[,2]),-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
fpr = fp/(n-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
out[[1]]
load("scenario5.RData")
#
temp = lapply(out,function(x) x[which.max(x[,2]),-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
fpr = fp/(n-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
colMeans(xx)
M
temp = lapply(out,function(x) x[3,-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
fpr = fp/(n-n0)
#fpr = fp/(M-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
colMeans(xx)
temp = lapply(out,function(x) x[which.max(x[,2]),-c(1,2)])
#temp = lapply(out,function(x) x[3,-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
#fpr = fp/(n-n0)
fpr = fp/(M-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
colMeans(xx)
source('~/Documents/R/Phub/tpr.R')
xx
colMeans(xx)
0.7*0.09+0.8*0.02+0.9*0.04+0.86
M
library(Phub)
phub
out[[]]
out[[1]]
out[[1]]
rm(list=ls())
## Bic
load("scenario7.RData")
temp = lapply(out,function(x) x[which.max(x[,2]),-c(1,2)])
#temp = lapply(out,function(x) x[3,-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
#fpr = fp/(n-n0)
fpr = fp/(M-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
out[[1]]
n0 = 5; n=100
A0 = GenA(100,n0,0.4,0.1,rep(0.05,n))
G0 = GenG(A0,1000,c(0.2,rep(0.8/n0,n0)))
M = 10
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
phub(G0,A,rho,0.04,pen.type="log")$rho
phub(G0,A,rho,0.04,pen.type="plog")$rho
phub(G0,A,rho,0.08,pen.type="plasso")$rho
[Package Phub version 0.1.0
phub(G0,A,rho,0.035,pen.type="log")$rho
phub(G0,A,rho,0.035,pen.type="log")$rho
phub(G0,A,rho,0.038,pen.type="log")$rho
n0 = 5; n=100
A0 = GenA(100,n0,0.4,0.02,rep(0.05,n))
G0 = GenG(A0,1000,c(0.2,rep(0.8/n0,n0)))
M = 10
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
phub(G0,A,rho,0.04,pen.type="log")$rho
G0 = GenG(A0,1000,c(0.2,rep(0.8/n0,n0)))
M = 10
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
phub(G0,A,rho,0.035,pen.type="log")$rho
temp
temp[[1]]
load("scenario7.RData")
#
temp = lapply(out,function(x) x[which.max(x[,2]),-c(1,2)])
#temp = lapply(out,function(x) x[3,-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
#fpr = fp/(n-n0)
fpr = fp/(M-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
colMeans(xx)
load("scenario3.RData")
#
temp = lapply(out,function(x) x[which.max(x[,2]),-c(1,2)])
#temp = lapply(out,function(x) x[3,-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
#fpr = fp/(n-n0)
fpr = fp/(M-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
colMeans(xx)
load("scenario1.RData")
#
temp = lapply(out,function(x) x[which.max(x[,2]),-c(1,2)])
#temp = lapply(out,function(x) x[3,-c(1,2)])
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) -tp -1
tpr = tp/n0
#fpr = fp/(n-n0)
fpr = fp/(M-n0)
return(c(tpr,fpr))
}
tt = lapply(temp,fun)
xx = do.call(rbind,tt)
xx
colMeans(xx)
out[[1]]
n0 = 10; n=100; T=1000
A0 = GenA(100,n0,0.4,0.1,rep(0.05,n))
G0 = GenG(A0,T,c(0.2,rep(0.8/n0,n0)))
M = 100
mphub(G0,M,0.023)$rho
mphub(G0,M,0.022,rep=5)$rho
mphub(G0,M,0.010,rep=5)$rho
mphub(G0,M,0.012,rep=5)$rho
n0 = 5; n=100
A0 = GenA(100,n0,0.4,0.1,rep(0.05,n))
G0 = GenG(A0,1000,c(0.2,rep(0.8/n0,n0)))
M = 10
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
phub(G0,A,rho,0.04,pen.type="log")$rho
phub(G0,A,rho,0.04,pen.type="plog")$rho
M=80
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
phub(G0,A,rho,0,pen.type="plog")$rho
n0 = 10; n=100; T=2000
A0 = GenA(100,n0,0.4,0.02,rep(0.05,n))
G0 = GenG(A0,T,c(0.2,rep(0.8/n0,n0)))
M = 20
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
#phub(G0,A,rho,0.04,pen.type="log")$rho
phub(G0,A,rho,0,pen.type="plog")$rho
n0 = 10; n=100; T=2000
A0 = GenA(100,n0,0.4,0.02,rep(0.05,n))
G0 = GenG(A0,T,c(0.2,rep(0.8/n0,n0)))
M = 50
A = matrix(runif((M+1)*n),nrow=(M+1)); diag(A[-1,])=1
rho = runif(M+1); rho = rho/sum(rho)
#phub(G0,A,rho,0.04,pen.type="log")$rho
phub(G0,A,rho,0,pen.type="plog")$rho
phub
devtools::document()
library(Phub)
rm(list=ls())
delta<-0.2 # effect size
sigmasq<-1 # total variance
pisq<-0.8 # within-cluster variance
tausq = 0.1
n<-10 # number of individuals per level-two unit
j<-5 # number of level-two units per level-three unit
k<-30 # number of level-three units
# step 2: X,Z,W
A<-diag(j*k) # identity matrix
B<-array(c(1,1,1,1,1,1,1,1,1,1),dim = c(10,1)) #ones and time
X<-kronecker(A,B) #block diagonal matrix
dim(X)
colSums(X)
A1 <- diag(k)
B1 <- array(c(1,1,1,1,1,1,1,1,1,1),dim = c(5,1))
Z <- kronecker(A1,B1)
dim(Z)
colSums(Z)
# X2
x2 <- matrix(c(array(c(1,1,1,1,1,1,1,1,1,1),dim = c(k,1)), rnorm(k, mean = 0, sd=0.1)), nrow = k,ncol = 2)
dim(x2)
x2
install.packages("Matrix")
library(Matrix)
?kronecker
M <- matrix(1:6, ncol = 2)
M
diag(1, 3)
kronecker(diag(1, 3), M)
B <- array(c(1,1,1,1,1,1,1,1,1,1,1,2,3,4,5,6,7,8,9,10), dim=c(10,2))
B
n=10
j=50
A <- diag(j)
B <- array(c(1,1,1,1,1,1,1,1,1,1,1,2,3,4,5,6,7,8,9,10), dim=c(10,2))
X <- kronecker(A,B)
dim(X)
head(X)
colSums(X)
A <- diag(j)
B <- array(c(1,1,1,1,1,1,1,1,1,1,rep(0.10)), dim=c(10,2))
X <- kronecker(A,B)
colSums(X)
j
n
View(X)
A <- diag(j)
B <- array(c(1,1,1,1,1,1,1,1,1,1,rep(0,10)), dim=c(10,2))
X <- kronecker(A,B)
colSums(X)
Zmean1 <- 1
Zmean2 <- 2
Zmean3 <- 3
Zmean4 <- 4
Zmean5 <- 5
B1 <- matrix(data=c(1,0,Zmean1,0,0,1,0,Zmean1), nrow=2, ncol=4)
A1 <- array(1, dim=c(j/5,1))
B1
A1 <- array(1, dim=c(j/5,1))
Z1 <- kronecker(A1,B1)
Z1
Zmean1 <- 1
Zmean2 <- 2
Zmean3 <- 3
Zmean4 <- 4
Zmean5 <- 5
B1 <- matrix(data=c(1,0,Zmean1,0,0,1,0,Zmean1), nrow=2, ncol=4)
A1 <- array(1, dim=c(j/5,1))
Z1 <- kronecker(A1,B1)
B2 <- matrix(data=c(1,0,Zmean2,0,0,1,0,Zmean2), nrow=2, ncol=4)
A2 <- array(1, dim=c(j/5,1))
Z2 <- kronecker(A2,B2)
B3 <- matrix(data=c(1,0,Zmean3,0,0,1,0,Zmean3), nrow=2, ncol=4)
A3 <- array(1, dim=c(j/5,1))
Z3 <- kronecker(A3,B3)
B4 <- matrix(data=c(1,0,Zmean4,0,0,1,0,Zmean4), nrow=2, ncol=4)
A4 <- array(1, dim=c(j/5,1))
Z4 <- kronecker(A4,B4)
B5 <- matrix(data=c(1,0,Zmean5,0,0,1,0,Zmean5), nrow=2, ncol=4)
A5 <- array(1, dim=c(j/5,1))
Z5 <- kronecker(A5,B5)
Z <- rbind(Z1,Z2,Z3,Z4,Z5)
Z
Zmean1 <- 1
Zmean2 <- 2
Zmean3 <- 3
Zmean4 <- 4
Zmean5 <- 5
B1 <- matrix(data=c(1,0,Zmean1,0,0,1,0,Zmean1), nrow=2, ncol=4)
A1 <- array(1, dim=c(j/5,1))
Z1 <- kronecker(A1,B1)
B2 <- matrix(data=c(1,0,Zmean2,0,0,1,0,Zmean2), nrow=2, ncol=4)
A2 <- array(1, dim=c(j/5,1))
Z2 <- kronecker(A2,B2)
B3 <- matrix(data=c(1,0,Zmean3,0,0,1,0,Zmean3), nrow=2, ncol=4)
A3 <- array(1, dim=c(j/5,1))
Z3 <- kronecker(A3,B3)
B4 <- matrix(data=c(1,0,Zmean4,0,0,1,0,Zmean4), nrow=2, ncol=4)
A4 <- array(1, dim=c(j/5,1))
Z4 <- kronecker(A4,B4)
B5 <- matrix(data=c(1,0,Zmean5,0,0,1,0,Zmean5), nrow=2, ncol=4)
A5 <- array(1, dim=c(j/5,1))
Z5 <- kronecker(A5,B5)
Z <- rbind(Z1,Z2,Z3,Z4,Z5)
Z
j = 50
n=10
D <- list()
set.seed(4321)
for (i in 1:j) {
zj <- rnorm(1, mean=meanz, sd=sdz)
Dz1 <- c(1, zj, 0, 0)
Dz2 <- c(0, 0, 1, zj)
D[[i]] <- rbind(Dz1, Dz2)
}
E <- list()
for (i in 1:j) {
if (i == 1) {E[[i]] <- D[[1]]}
else {E[[i]] <- rbind(E[[i-1]], D[[i]])}
}
Z <- E[[j]]
meanx <- 0
sdx <- 1
meanz <- 0
sdz <- 1
D <- list()
set.seed(4321)
for (i in 1:j) {
zj <- rnorm(1, mean=meanz, sd=sdz)
Dz1 <- c(1, zj, 0, 0)
Dz2 <- c(0, 0, 1, zj)
D[[i]] <- rbind(Dz1, Dz2)
}
E <- list()
for (i in 1:j) {
if (i == 1) {E[[i]] <- D[[1]]}
else {E[[i]] <- rbind(E[[i-1]], D[[i]])}
}
Z <- E[[j]]
Z
dim(Z)
k = 30
meanz <- 0
sdz <- 1
D <- list()
set.seed(4321)
for (i in 1:k) {
zj <- rnorm(1, mean=meanz, sd=sdz)
Dz1 <- c(1, zj)
Dz2 <- c(1, zj)
D[[i]] <- rbind(Dz1, Dz2)
}
E <- list()
for (i in 1:j) {
if (i == 1) {E[[i]] <- D[[1]]}
else {E[[i]] <- rbind(E[[i-1]], D[[i]])}
}
Z <- E[[j]]
k = 30
meanz <- 0
sdz <- 1
D <- list()
set.seed(4321)
for (i in 1:k) {
zj <- rnorm(1, mean=meanz, sd=sdz)
Dz1 <- c(1, zj)
Dz2 <- c(1, zj)
D[[i]] <- rbind(Dz1, Dz2)
}
E <- list()
for (i in 1:k) {
if (i == 1) {E[[i]] <- D[[1]]}
else {E[[i]] <- rbind(E[[i-1]], D[[i]])}
}
Z <- E[[k]]
dim(Z)
k = 30
meanz <- 0
sdz <- 1
D <- list()
set.seed(4321)
for (i in 1:k) {
zj <- rnorm(1, mean=meanz, sd=sdz)
Dz1 <- c(1, zj)
D[[i]] <- Dz1
}
E <- list()
for (i in 1:k) {
if (i == 1) {E[[i]] <- D[[1]]}
else {E[[i]] <- rbind(E[[i-1]], D[[i]])}
}
Z <- E[[k]]
dim(Z)
Z
barplot(Z[,2])
hist(Z[,2])
t=-100:0
plot(x=t,y=exp(-2*t),col="red",lwd=2)
lines(x=t,y=exp(-3*t),col="blue",lwd=2)
t=0:10
plot(x=t,y=exp(-2*t),col="red",lwd=2)
lines(x=t,y=exp(-3*t),col="blue",lwd=2)
t=0:100
plot(x=t,y=exp(-2*t),col="red",lwd=2)
lines(x=t,y=exp(-3*t),col="blue",lwd=2)
t=0:100
plot(x=t,y=exp(-2*t),col="red",lwd=2)
lines(x=t,y=exp(-10*t),col="blue",lwd=2)
t=0:20
plot(x=t,y=exp(-3*t),col="red",lwd=2)
lines(x=t,y=exp(-10*t),col="blue",lwd=2)
cbind(exp(-3*t),exp(-10*t))
rm(list=ls())
set.seed(1990)
n0 = 10; n=500
A0 = GenA(100,n0,0.4,0.02,rep(0.05,n))
G0 = GenG(A0,1000,c(0.2,rep(0.8/n0,n0)))
M = 80
# initial A
A = matrix(NA,M,n)
for(i in 1:M)A[i,] = colSums(G0[,i]*G0)/sum(G0[,i])
diag(A) = 1; A = rbind(runif(n),A)
# initial rho
rho = c(0.2,rep(0.8/M,M))
#t1 = phub(G0,A,rho,0.010,pen.type="log")
tt = phub(G0,A,rho,0.015,pen.type="plog")
rm(list=ls())
library(forach)
library(Phub)
## new GenA
library(foreach)
set.seed(1990)
n0 = 10; n=500
A0 = GenA(100,n0,0.4,0.02,rep(0.05,n))
G0 = GenG(A0,1000,c(0.2,rep(0.8/n0,n0)))
M = 80
# initial A
A = matrix(NA,M,n)
for(i in 1:M)A[i,] = colSums(G0[,i]*G0)/sum(G0[,i])
diag(A) = 1; A = rbind(runif(n),A)
# initial rho
rho = c(0.2,rep(0.8/M,M))
#t1 = phub(G0,A,rho,0.010,pen.type="log")
tt = phub(G0,A,rho,0.015,pen.type="plog")
set.seed(1990)
n0 = 10; n=500
A0 = GenA(n,n0,0.4,0.02,rep(0.05,n))
G0 = GenG(A0,1000,c(0.2,rep(0.8/n0,n0)))
M = 80
# initial A
A = matrix(NA,M,n)
for(i in 1:M)A[i,] = colSums(G0[,i]*G0)/sum(G0[,i])
diag(A) = 1; A = rbind(runif(n),A)
# initial rho
rho = c(0.2,rep(0.8/M,M))
#t1 = phub(G0,A,rho,0.010,pen.type="log")
tt = phub(G0,A,rho,0.015,pen.type="plog")
fun = function(x){
tp = sum(which(x!=0) %in% c(2:(n0+1)))
fp = sum(x!=0) - tp -1
tpr = tp/n0
fpr = fp/M
return(c(tpr,fpr))
}
fun(tt$rho)
#t1 = phub(G0,A,rho,0.010,pen.type="log")
tt = phub(G0,A,rho,0.012,pen.type="plog")
tt$rho
fun(tt$rho)
load("sl2.RData")
getwd()
dir()
setwd("/home/zhibing/R")
dir()
load("sl2.RData")
out[[1]]
